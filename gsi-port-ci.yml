# This file is a shared pipeline between GSI ports. Porters can use this file by replacing
# the port's .gitlab-ci.yml with just:
# ---
# include:
#  - https://gitlab.com/ubports/porting/community-ports/halium-generic-adaptation-build-tools/-/raw/main/gsi-port-ci.yml
# ---
# Porters may also set the variables below to alter the CI's behavior, or specify a new jobs
# to do custom things (e.g. Volla Phone 22's bootloader-flashable super.img).

variables:
  # Branch of https://gitlab.com/ubports/porting/community-ports/halium-generic-adaptation-build-tools
  ADAPTATION_TOOLS_BRANCH: main

image: ubuntu:22.04

build:
  stage: build
  script:
    - apt update
    - >-
      apt install -y --no-install-recommends
      bc bison build-essential ca-certificates cpio curl
      fakeroot flex git kmod libssl-dev libtinfo5 lz4 python2 python3 sudo unzip wget xz-utils
    - ln -s python2 /usr/bin/python
    - >-
      git clone -b $ADAPTATION_TOOLS_BRANCH
      https://gitlab.com/ubports/porting/community-ports/halium-generic-adaptation-build-tools.git
      build
    - ./build/build.sh
  artifacts:
    paths:
      - out/*

flashable:
  stage: deploy
  script:
    - apt update
    - apt install -y git img2simg jq sudo wget xz-utils
    - >-
      git clone -b $ADAPTATION_TOOLS_BRANCH
      https://gitlab.com/ubports/porting/community-ports/halium-generic-adaptation-build-tools.git
      build
    - DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
    - ./build/fetch-and-prepare-latest-ota.sh "20.04/arm64/android9plus/devel" "$DEVICE" ota
    - mkdir -p out
    - ./build/system-image-from-ota.sh ota/ubuntu_command out
  artifacts:
    paths:
      - out/boot.img
      - out/vendor_boot.img
      - out/system.img
  when: manual

devel-flashable:
  stage: deploy
  needs: [ "build" ]
  script:
    - apt update
    - apt install -y git img2simg jq sudo wget xz-utils
    - >-
      git clone -b $ADAPTATION_TOOLS_BRANCH
      https://gitlab.com/ubports/porting/community-ports/halium-generic-adaptation-build-tools.git
      build
    - DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
    - ./build/prepare-fake-ota.sh out/device_${DEVICE}.tar.xz ota
    - mkdir -p out
    - ./build/system-image-from-ota.sh ota/ubuntu_command out
    - mv out/rootfs.img out/ubuntu.img
  artifacts:
    paths:
      - out/boot.img
      - out/vendor_boot.img
      - out/ubuntu.img
